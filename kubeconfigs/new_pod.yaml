---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: devpod-2
  namespace: default
  labels:
    app: devpod-2
    kustomize.toolkit.fluxcd.io/prune: disabled
spec:
  serviceName: "devpod-2"
  replicas: 1
  selector:
    matchLabels:
      app: devpod-2
  template:
    metadata:
      labels:
        parasail.io/deployment: parasail-devpod-2
        parasail.io/owner: parasail
        app: devpod-2
        kustomize.toolkit.fluxcd.io/prune: disabled
    spec:
      nodeSelector:
        parasail-gpu-type: H200SXM
      tolerations:
      - key: sunk.coreweave.com/nodes
        operator: Exists
      containers:
      - name: dind
        image: docker:dind
        securityContext:
          privileged: true
        args:
        - "--host=tcp://0.0.0.0:2375"
        - "--tls=false"
        volumeMounts:
        - name: docker-graph-storage
          mountPath: /var/lib/docker
        - name: devpod-storage
          mountPath: /workspace
          subPath: dind-workspace
        env:
        - name: DOCKER_TLS_CERTDIR
          value: ""
      - name: devpod
        image: ghcr.io/tcapelle/triton_eval:9.1
        ### Run start with an infinite sleep loop
        securityContext:
          privileged: true
        resources:
          limits:
            nvidia.com/gpu: "8"
            cpu: "32"
            memory: "1800Gi"
          requests:
            cpu: "32"
            memory: "1800Gi"
            nvidia.com/gpu: "8"
        command:
        - /bin/sh
        - -c
        - |
          # Install SSH server with non-interactive frontend to avoid debconf issues
          export DEBIAN_FRONTEND=noninteractive
          apt-get update && apt-get install -y openssh-server
          
          # Create required directories
          mkdir -p /run/sshd
          
          # Configure SSH with secure settings
          sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin prohibit-password/' /etc/ssh/sshd_config
          sed -i 's/#PasswordAuthentication yes/PasswordAuthentication no/' /etc/ssh/sshd_config
          sed -i 's/#PubkeyAuthentication yes/PubkeyAuthentication yes/' /etc/ssh/sshd_config
          sed -i 's/#AuthorizedKeysFile/AuthorizedKeysFile/' /etc/ssh/sshd_config
          echo "ChallengeResponseAuthentication no" >> /etc/ssh/sshd_config
          echo "UsePAM no" >> /etc/ssh/sshd_config
          
          # Set up authorized keys
          mkdir -p /root/.ssh
          cp /etc/ssh-keys/authorized_keys /root/.ssh/authorized_keys
          chmod 700 /root/.ssh
          chmod 600 /root/.ssh/authorized_keys
          
          # Start SSH server directly (not using service)
          echo "Starting SSH server..."
          /usr/sbin/sshd -D -e &
          SSHD_PID=$!
          echo "SSH server started with PID: $SSHD_PID"
          
          # Keep container running
          echo "Container startup complete, entering wait loop"
          while true; do
            sleep 3600
            # Check if sshd is still running
            if ! kill -0 $SSHD_PID 2>/dev/null; then
              echo "SSH server stopped, restarting..."
              /usr/sbin/sshd -D -e &
              SSHD_PID=$!
              echo "SSH server restarted with PID: $SSHD_PID"
            fi
          done
        ports:
        - containerPort: 2375
          name: docker
        - containerPort: 22
          name: ssh
        volumeMounts:
        - name: shared-tools
          mountPath: /shared
        - name: devpod-storage
          mountPath: /workspace
        - name: ssh-keys
          mountPath: /etc/ssh-keys
          readOnly: true
        - name: dshm
          mountPath: /dev/shm
        env:
        - name: DOCKER_HOST
          value: "tcp://localhost:2375"
      volumes:
      - name: shared-tools
        emptyDir: {}
      - name: ssh-keys
        configMap:
          name: devpod-2-ssh-keys
      - name: dshm
        emptyDir:
          medium: Memory
          sizeLimit: 132Gi
  volumeClaimTemplates:
  - metadata:
      name: docker-graph-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 200Gi
  - metadata:
      name: devpod-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 500Gi