apiVersion: batch/v1
kind: Job
metadata:
  name: axolotl-training-job # Consider generateName for multiple runs: axolotl-training-job-
  labels:
    app: axolotl-train
    task: training # Task label for anti-affinity
spec:
  template:
    metadata:
      labels:
        app: axolotl-train # Pods get this label
        task: training     # And this task label
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: task # Avoid pods with these task labels
                operator: In
                values:
                - serving
                - rewards
            topologyKey: "kubernetes.io/hostname"
      # imagePullSecrets: ...
      containers:
      - name: axolotl-train-container
        image: ghcr.io/tcapelle/triton_eval:latest # <-- UPDATE THIS
        workingDir: /app/axolotl_dev
        command: ["axolotl"]
        args:
          - "train"
          - "/mnt/axolotl-config/config.yaml"
          - "--deepspeed"
          - "deepspeed_configs/zero2.json"
        env:
        - name: WANDB_API_KEY
          valueFrom:
            secretKeyRef:
              name: wandb-api-key-secret # Name of the secret you created
              key: WANDB_API_KEY        # Key within the secret
        - name: TRITON_SERVER_URL
          value: "http://axolotl-rewards-service:9347"
        - name: WEAVE_PRINT_CALL_LINK
          value: "0"
        - name: TOKENIZERS_PARALLELISM
          value: "0"
        - name: HF_TOKEN
          valueFrom:
            secretKeyRef:
              name: hf-token-secret # Name of the secret for HF_TOKEN
              key: HF_TOKEN        # Key within the hf-token-secret
        # You can add other environment variables here if needed
        # - name: ANOTHER_ENV_VAR
        #   value: "some_value"
        volumeMounts:
          - mountPath: /dev/shm
            name: dshm
          - name: config-volume
            mountPath: /mnt/axolotl-config
          - mountPath: /model-checkpoints
            name: model-checkpoints
        resources:
          limits:
            nvidia.com/gpu: "4"
            cpu: "16"
            memory: "800Gi"
          requests:
            cpu: "16"
            memory: "800Gi"
            nvidia.com/gpu: "4"
      volumes:
        - name: model-checkpoints
          persistentVolumeClaim:
            claimName: model-checkpoints
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 130Gi # Adjust size as needed
        - name: config-volume
          configMap:
            name: axolotl-config
      restartPolicy: OnFailure
      # tolerations: ...
      # nodeSelector: ...
  backoffLimit: 0 # No retries for the job on failure 